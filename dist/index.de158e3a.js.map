{"mappings":"AAAA,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;AACzC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACnC,MAAM,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC;AAEhC,MAAM,OAAO,GAAG,UAAU,IAAI;IAAC;QAC3B,IAAI,EAAE,GAAG;QAAE,QAAQ,EAAE,QAAQ;QAAE,GAAG,EAAE,oBAAoB;KAC3D;IAAE;QACC,IAAI,EAAE,GAAG;QAAE,QAAQ,EAAE,KAAK;QAAE,GAAG,EAAE,uBAAuB;KAC3D;IAAE;QACC,IAAI,EAAE,GAAG;QAAE,QAAQ,EAAE,OAAO;QAAE,GAAG,EAAE,sBAAsB;KAC5D;IAAE;QACC,IAAI,EAAE,GAAG;QAAE,QAAQ,EAAE,QAAI;QAAM,GAAG,EAAE,mBAAmB;KACtD;IAAF;QACC,IAAI,EAAE,GAAG;QAAE,QAAQ,EAAE,cAAM;QAAU,GAAG,EAAE,wBAAwB;KAC7D;CAAP;AAEF,MAAM,WAAW,GAAG,CAAC,GAAG,GAAK;IACzB,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAC7B,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CACnB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CACnB,OAAO,SAAS,EAAE,CAAC,CAAA;CAC3B;AAED,MAAM,MAAM,GAAG,IAAM;IACjB,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE;IAC1C,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,GAAK;QAC7B,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,wIAGW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,4FAEG,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,yXAOrD,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACjD,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,IAAM;YAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;SACxB,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAK;YAC7B,CAAC,CAAC,eAAe,EAAE;YACnB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,MAAM,EAAE;SACX,CAAC;KACL,CAAC;CACL;AACD,MAAM,EAAE;AAER,CAAC,CAAC,YAAY,CAAC,CACV,EAAE,CAAC,OAAO,EAAE,IAAM;IACf,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAO,CAAC;IAChC,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EACzB,GAAG,GAAG,UAAU,GAAG,GAAG;IAE1B,OAAO,CAAC,IAAI,CAAC;QACT,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAAE,QAAQ,EAAE,GAAG;QAAE,GAAG,EAAE,GAAG;KACrD,CAAC;IACF,MAAM,EAAE;CACX,CAAC;AAEN,MAAM,CAAC,cAAc,GAAG,IAAM;IAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;CACvC","sources":["src/main.js"],"sourcesContent":["const hash = localStorage.getItem('hash')\r\nconst hashObject = JSON.parse(hash)\r\nconst $siteList = $('.siteList')\r\n\r\nconst hashMap = hashObject || [{\r\n    logo: \"G\", siteName: 'Github', url: \"https://github.com\"\r\n}, {\r\n    logo: \"V\", siteName: 'Vue', url: \"https://cn.vuejs.org/\"\r\n}, {\r\n    logo: \"R\", siteName: 'React', url: \"https://reactjs.org/\"\r\n}, {\r\n    logo: \"J\", siteName: '掘金', url: \"https://juejin.cn\"\r\n}, {\r\n    logo: \"Y\", siteName: '印记中文', url: \"https://docschina.org/\"\r\n}]\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace('.com', '')\r\n        .replace(/\\/.*/, '')\r\n}\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.lastLi)').remove()\r\n    hashMap.forEach((node, index) => {\r\n        const $li = $(`<li>\r\n                          <div class=\"site\">\r\n                              <div class=\"logo\">\r\n                                  ${node.logo[0]}\r\n                              </div>\r\n                              <div class=\"siteName\">${simplifyUrl(node.siteName)}</div>\r\n                              <div class=\"close\">\r\n                                <svg class=\"icon\">\r\n                                    <use xlink:href=\"#icon-closefill\"></use>\r\n                                </svg>\r\n                              </div>                          \r\n                          </div>                      \r\n                       </li>`).insertBefore($('.lastLi'))\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation()\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\nrender()\r\n\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请输入网址')\r\n        if (url.indexOf('http') !== 0) {\r\n            url = 'https://' + url\r\n        }\r\n        hashMap.push({\r\n            logo: simplifyUrl(url)[0], siteName: url, url: url\r\n        })\r\n        render()\r\n    })\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('hash', string)\r\n}"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}